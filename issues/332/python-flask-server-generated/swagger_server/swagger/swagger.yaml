openapi: 3.0.0
info:
  title: cccc-praying-api
  description: The API for CCCC Praying project
  version: 1.0.0
servers:
- url: http://bd69592b551e.ngrok.io/
  description: SwaggerHub API Auto Mocking
paths:
  /user:
    post:
      tags:
      - User
      description: register a new user
      operationId: new_user
      requestBody:
        description: user email and password.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInfo'
        required: true
      responses:
        "201":
          description: New User successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "400":
          description: |
            The request body was either not present or did not contain a valid User object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: |
            The request was not made by an authenticated User satisfying the authorization criteria described above.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/login:
    post:
      tags:
      - User
      summary: Log in a User.
      description: |
        Authenticate a specific User with their email address and password.
      operationId: authenticate_user
      requestBody:
        description: |
          Email address and plain-text password for the User being authenticated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInfo'
            example:
              email: jdoe@oregonstate.edu
              password: hunter2
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: |
            The request body was either not present or did not contain all of the required fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: |
            The specified credentials were invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: |
            An internal server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/{id}:
    get:
      tags:
      - User
      summary: Fetch data about a specific User.
      description: |
        Returns information about the specified User. Include username and church jointed.
      operationId: get_user_by_id
      parameters:
      - name: id
        in: path
        description: |
          Unique ID of a User.  Exact type/format will depend on your implementation but will likely be either an integer or a string.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/id'
        example: "123"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        "403":
          description: |
            The request was not made by an authenticated User satisfying the authorization criteria described above.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Specified Course `id` not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.user_controller
components:
  schemas:
    LoginInfo:
      type: object
      properties:
        email:
          type: string
          description: |
            Email address for the User.  This is required to be unique among all Users.
          example: doej@oregonstate.edu
        password:
          type: string
          description: |
            The User's plain-text password.  This is required when creating a new User and when logging in.
          example: hunter2
      description: |
        An object representing information about a Tarpaulin application user.
    UserInfo:
      type: object
      properties:
        username:
          type: string
          description: user's username
          example: Amy Chan
        church:
          description: the id of the church that the user joined
          oneOf:
          - type: integer
          - type: string
      description: "user infomation include username and church    \n"
      example:
        church: ""
        username: Amy Chan
    Error:
      type: object
      properties:
        error:
          type: string
          description: A message describing the Error.
      description: |
        An object representing an error response from the API.
    inline_response_201:
      type: object
      properties:
        id:
          description: |
            Unique ID of the created User.  Exact type/format will depend on your implementation but will likely be either an integer or a string.
          example: "123"
          oneOf:
          - type: integer
          - type: string
      example:
        id: "123"
    inline_response_200:
      type: object
      properties:
        token:
          type: string
          description: |
            succes infomation
          example: Login Success!
      example:
        token: Login Success!
    id:
      oneOf:
      - type: integer
      - type: string

